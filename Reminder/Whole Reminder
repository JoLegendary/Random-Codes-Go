{{/* 
	BSD 3-Clause License

	Copyright (c) 2021, JoLegendary
	All rights reserved.

	Trigger Type: Regex
	Trigger: \A((?:\-)\s*(set|reset)|(?:\;)\s*(?:a(?:rena)?))(?: +|\z)
	Replace ";" with the prefix you want and add on with "|" as the seperator
*/}} 

{{/* Expandable Reminder to add to it
`Regex` (cslice <command name> <duration(in seconds)> <command number>) 
Command number must strictly be unique and a number */}} 
{{$slice := dict 
`;a(?:rena)?(?: +|\z)` (cslice ";arena" "2700" "1")}}

{{/* Reset part of the reminder 
Must be the same as above but instead 
No. (cslice "Command" "Alias1" "Alias2") 
"all" must strictly be the last one 
and be 1 higher than the last number */}} 
{{$reset := dict
1 (cslice "a" "arena")
7 "all"}}

{{/* Actual Code don't touch */}} 
{{$command := 0}}
{{$cmds := ""}} 
{{$delay := ""}} 
{{$channel := .Channel.ID}}
{{$remind := true}}
{{if not .ExecData}}
	{{$cmd := .Cmd|lower}}
	{{if eq $cmd "-reset"}}
		{{range $num, $name := $reset}}
			{{if inFold $name $.StrippedMsg}}
				{{if eq $.StrippedMsg "all"}}
					{{range seq 1 $num}}
						{{dbDel $.User.ID (print "Remind" .)}}
						{{cancelScheduledUniqueCC $.CCID (print $.User.ID "for " .)}}
						{{addReactions ":white_check_mark:"}}
					{{end}}
				{{else}}
					{{dbDel $.User.ID (print "Remind" $num)}}
					{{cancelScheduledUniqueCC $.CCID (print $.User.ID "for " $num)}}
					{{addReactions ":white_check_mark:"}}
				{{end}}
			{{end}}
		{{end}}
	{{end}}
	{{with (dbGet .User.ID "Config").Value}}
		{{$remind = .Get "remind"}}
		{{if .Get "channel"}}
			{{$channel = .Get "channel"}}
		{{end}}
	{{end}}
	{{if eq $cmd "-set"}}
		{{$args := parseArgs 1 "-set <Channel:Mention/0> <True/False>" (carg "int" "channelmention") (carg "string" "True/False")}}        
		{{$sdict := or (dbGet .User.ID "Config").Value sdict}}
		{{if eq ($args.Get 0) 0}}
			{{if $sdict.Get "channel"}}
				{{$sdict.Del "channel"}}
			{{end}}
		{{else}}
			{{$sdict.Set "channel" (getChannel ($args.Get 0)).ID}}
		{{end}}
		{{if $args.IsSet 1}}
			{{if eq (lower ($args.Get 1)) "true"}}
				{{$sdict.Set "remind" true}}
			{{else if eq (lower ($args.Get 1)) "false"}}
				{{$sdict.Set "remind" false}}
			{{end}}
			{{addReactions ":white_check_mark:"}}
		{{end}}
		{{dbSet .User.ID "Config" $sdict}}
	{{end}}
	{{if $remind}}
		{{range $regex, $v := $slice}}
			{{$cmds = (index $v 0)}}
			{{$delay = (toInt (index $v 1))}}
			{{$command = (toInt (index $v 2))}}
			{{if reFind $regex $cmd}} 
				{{with dbGet $.User.ID (print "Remind" $command)}} 
					{{print "You can " .Value.command " at **`" ((.ExpiresAt.Add (toDuration "8h")).Format "3:04 PM") "`** \nAfter `" (.ExpiresAt.Sub currentTime|humanizeDurationSeconds) "`."| cembed "color" (randInt 16777216) "author" (sdict "icon_url" (.Value.avatar) "name" .Value.string) "description"| sendMessage nil}}
				{{else}}
					{{scheduleUniqueCC $.CCID nil $delay  (print $.User.ID " for " $command)  (sdict "id" $.User.ID "avatar" ($.User.AvatarURL "1024") "command" $cmds "channel" $channel)}}
					{{dbSetExpire $.User.ID (print "Remind" $command) (sdict "command" $cmds "avatar" ($.User.AvatarURL "1024") "string" $.User.String) $delay}}
				{{end}} 
			{{end}} 
		{{end}} 
	{{end}}
{{else}}
	{{print "You can **" .ExecData.command "** now!"| cembed "author" (sdict "name" "Reminder!" "icon_url"  .ExecData.avatar) "color" (randInt 16777216) "description"|complexMessage "content" (print "<@" .ExecData.id ">") "embed"| sendMessageNoEscape .ExecData.channel}}
{{end}}
